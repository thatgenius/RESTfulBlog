<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <beans:bean id="restAuthenticationEntryPoint" class="blog.entity.Authorization.RestAuthenticationEntryPoint"/>

    <http  pattern="/rest/posts/**" entry-point-ref="restAuthenticationEntryPoint" use-expressions="true" auto-config="false" create-session="stateless" >
        <custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER"   />
        <intercept-url pattern="/rest/posts/**" access="isAuthenticated()" />
        <logout />
    </http>

    <beans:bean class="blog.entity.Authorization.CustomTokenAuthenticationFilter" id="authenticationTokenProcessingFilter">
        <beans:constructor-arg type="java.lang.String" value="/rest/posts/**"/>
        <beans:constructor-arg
                type="org.springframework.security.authentication.AuthenticationManager" ref="authManager">
        </beans:constructor-arg>
    </beans:bean>

    <http auto-config="true">
        <intercept-url pattern="/token1/**" access="ROLE_USER" />
    </http>

    <beans:bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/BlogDB"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="password"/>
        <beans:property name="validationQuery" value="SELECT 1"/>
    </beans:bean>

    <authentication-manager alias="authManager" erase-credentials="false">
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service data-source-ref="myDataSource"
                               users-by-username-query="select username,password, enabled from user where username=?"
                               authorities-by-username-query="select username, role from user_roles where username =?" />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10" />
    </beans:bean>

    <context:annotation-config/>

</beans:beans>
